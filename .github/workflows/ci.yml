name: CI for UMI Processing Script

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          shellcheck \
          parallel \
          fastp \
          bwa \
          fastqc \
          multiqc
    
    - name: Lint with ShellCheck
      run: |
        shellcheck bin/umi_processing_script.sh
    
    - name: Install Python dependencies
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install Python packages
      run: |
        pip install \
          umierrorcorrect \
          pytest
    
    - name: Create test data
      run: |
        mkdir -p test_data
        # Generate mock FASTQ files for testing
        for i in {1..2}; do
          zcat /dev/zero | tr '\0' '\141' | head -c 1000000 > test_data/sample_R1_001.fastq
          zcat /dev/zero | tr '\0' '\141' | head -c 1000000 > test_data/sample_R2_001.fastq
          gzip test_data/sample_R1_001.fastq
          gzip test_data/sample_R2_001.fastq
        done
        # Create a small test reference genome
        echo ">chr1" > test_data/test_reference.fa
        head -c 1000000 /dev/urandom | LC_ALL=C tr -dc 'ACGT' >> test_data/test_reference.fa
        bwa index test_data/test_reference.fa
    
    - name: Run script with test data
      run: |
        bash bin/umi_pipeline_parallel.sh \
          -i test_data \
          -r test_data/test_reference.fa \
          -t 2 \
          --skip-fastqc \
          --skip-multiqc
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: processing-logs
        path: |
          script_log.txt
          job.log
